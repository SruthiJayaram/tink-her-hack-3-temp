from flask import Flask, render_template, request, redirect, url_for, flash, session
import firebase_admin
from firebase_admin import credentials, auth, firestore

# Initialize Flask and Firebase
app = Flask(__name__)
cred = credentials.Certificate("serviceAccountKey.json")
firebase_admin.initialize_app(cred)

# Get Firestore client
db = firestore.client()

# Flask Routes


@app.route('/')
def home():
    if 'user_id' not in session:
        return redirect(url_for('login'))
    return render_template('home.html')


@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        email = request.form['email']
        password = request.form['password']

        try:
            # Authenticate with Firebase
            user = auth.get_user_by_email(email)
            if password == "dummy_password":  # Replace with your actual method
                session['user_id'] = user.uid
                return redirect(url_for('home'))
            else:
                flash('Invalid credentials')
        except Exception as e:
            flash('Login failed: ' + str(e))
            return redirect(url_for('login'))

    return render_template('login.html')


@app.route('/signin', methods=['GET', 'POST'])
def signin():
    # Handle Sign-Up
    if request.method == 'POST':
        email = request.form['email']
        password = request.form['password']

        try:
            # Create user in Firebase Authentication
            user = auth.create_user(email=email, password=password)
            flash('Signup successful! Please complete your profile.')
            # Automatically log in the user after signup
            # Use the automatically generated user UID
            session['user_id'] = user.uid
            # Redirect to profile page for additional details
            return redirect(url_for('profile'))
        except Exception as e:
            flash('Signup failed: ' + str(e))

    return render_template('login.html')


@app.route('/profile', methods=['GET', 'POST'])
def profile():
    if request.method == 'POST':
        # Collect user details from the form
        name = request.form['name']
        age = request.form['age']
        gender = request.form['gender']
        phone_number = request.form['phone_number']
        allergies = request.form['allergies']
        diseases = request.form['diseases']

        # Get the user UID from the session (this is the unique ID automatically generated by Firebase Authentication)
        user_id = session['user_id']

        # Reference to the "users" collection in Firestore
        users_ref = db.collection('users')

        # Create the user profile data
        user_data = {
            'id': user_id,  # Firebase user UID will be used as the document ID
            'name': name,
            'age': age,
            'gender': gender,
            'phone_number': phone_number,
            'allergies': allergies,
            'diseases': diseases
        }

        # Add the user profile document to Firestore using the user's UID as the document ID
        users_ref.document(user_id).set(user_data)

        flash('Profile created successfully!')
        return redirect(url_for('home'))

    return render_template('profile.html')


@app.route('/logout')
def logout():
    session.pop('user_id', None)
    return redirect(url_for('login'))


if __name__ == '__main__':
    app.run(debug=True)
